/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 07 15:41:06 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe.ingredients;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.ingredients.Coffee;
import uk.ac.sheffield.com1003.cafe.ingredients.Unit;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Coffee_ESTest {

//  @org.junit.Rule
//  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
//
//  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone();
//
//  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
//
//
//  @BeforeClass
//  public static void initEvoSuiteFramework() {
//    org.evosuite.runtime.RuntimeSettings.className = "uk.ac.sheffield.com1003.cafe.ingredients.Coffee";
//    org.evosuite.runtime.GuiSupport.initialize();
//    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100;
//    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
//    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true;
//    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
//    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
//    org.evosuite.runtime.classhandling.JDKClassResetter.init();
//    setSystemProperties();
//    initializeClasses();
//    org.evosuite.runtime.Runtime.getInstance().resetRuntime();
//  }
//
//  @AfterClass
//  public static void clearEvoSuiteFramework(){
//    Sandbox.resetDefaultSecurityManager();
//    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
//  }
//
//  @Before
//  public void initTestCase(){
//    threadStopper.storeCurrentThreads();
//    threadStopper.startRecordingTime();
//    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
//    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
//    setSystemProperties();
//    org.evosuite.runtime.GuiSupport.setHeadless();
//    org.evosuite.runtime.Runtime.getInstance().resetRuntime();
//    org.evosuite.runtime.agent.InstrumentingAgent.activate();
//  }
//
//  @After
//  public void doneWithTestCase(){
//    threadStopper.killAndJoinClientThreads();
//    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
//    org.evosuite.runtime.classhandling.JDKClassResetter.reset();
//    resetClasses();
//    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
//    org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
//    org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
//  }
//
//  public static void setSystemProperties() {
//
//    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone());
//    java.lang.System.setProperty("user.dir", "/Users/ruizhengu/Experiments/model_solution_evosuite");
//    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/1r/t1t8tcs944979hxkq3w8p1b40000gn/T/");
//  }
//
//  private static void initializeClasses() {
//    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Coffee_ESTest.class.getClassLoader() ,
//      "uk.ac.sheffield.com1003.cafe.ingredients.Ingredient",
//      "uk.ac.sheffield.com1003.cafe.ingredients.Unit",
//      "uk.ac.sheffield.com1003.cafe.ingredients.Coffee"
//    );
//  }
//
//  private static void resetClasses() {
//    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Coffee_ESTest.class.getClassLoader());
//
//    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
//      "uk.ac.sheffield.com1003.cafe.ingredients.Ingredient",
//      "uk.ac.sheffield.com1003.cafe.ingredients.Coffee",
//      "uk.ac.sheffield.com1003.cafe.ingredients.Unit"
//    );
//  }

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      Coffee coffee1 = new Coffee((-3103));
      boolean boolean0 = coffee0.equals(coffee1);
      assertEquals((-3103), coffee1.getAmount());
      assertFalse(coffee1.equals((Object)coffee0));
      assertEquals("Coffee", coffee1.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      coffee0.name = null;
      // Undeclared exception!
      try { 
        coffee0.equals(coffee0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Coffee coffee0 = new Coffee(2147483645);
      Coffee coffee1 = new Coffee(2147483645, true);
      boolean boolean0 = coffee0.equals(coffee1);
      assertEquals("Coffee", coffee1.getName());
      assertEquals(2147483645, coffee1.getAmount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      Unit unit0 = Unit.ML;
      coffee0.unit = unit0;
      Coffee coffee1 = new Coffee();
      boolean boolean0 = coffee0.equals(coffee1);
      assertEquals(8, coffee1.getAmount());
      assertFalse(boolean0);
      assertEquals("Coffee", coffee1.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Coffee coffee0 = new Coffee(0, false);
      Coffee coffee1 = new Coffee();
      boolean boolean0 = coffee0.equals(coffee1);
      assertFalse(coffee1.equals((Object)coffee0));
      assertEquals(8, coffee1.getAmount());
      assertEquals("Coffee", coffee1.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      assertEquals("Coffee", coffee0.getName());
      
      coffee0.name = "%A ,/rLiuOIZHfM QX-";
      Coffee coffee1 = new Coffee();
      boolean boolean0 = coffee0.equals(coffee1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Coffee coffee0 = new Coffee(0, false);
      boolean boolean0 = coffee0.equals(coffee0);
      assertTrue(boolean0);
      assertEquals(0, coffee0.getAmount());
      assertEquals("Coffee", coffee0.getName());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Coffee coffee0 = new Coffee(0, false);
      boolean boolean0 = coffee0.equals("Coffee [unit=GR, amount=0, decaf=false]");
      assertFalse(boolean0);
      assertEquals(0, coffee0.getAmount());
      assertEquals("Coffee", coffee0.getName());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Coffee coffee0 = new Coffee(0, false);
      String string0 = coffee0.toString();
      assertEquals("Coffee [unit=GR, amount=0, decaf=false]", string0);
      assertEquals("Coffee", coffee0.getName());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Coffee coffee0 = new Coffee();
      boolean boolean0 = coffee0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(8, coffee0.getAmount());
      assertEquals("Coffee", coffee0.getName());
  }
}
