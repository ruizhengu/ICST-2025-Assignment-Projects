/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 15:55:44 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.Cafe;
import uk.ac.sheffield.com1003.cafe.Order;
import uk.ac.sheffield.com1003.cafe.Recipe;

public class Cafe_ESTest {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe("none", (-2892.28));
        boolean boolean0 = cafe0.addRecipe(recipe0);
        boolean boolean1 = cafe0.placeOrder("none", "none", (-2892.28));
        assertTrue(boolean1 == boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        Cafe cafe0 = new Cafe((String) null);
        String string0 = cafe0.getName();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        Cafe cafe0 = new Cafe("", 3346, 39);
        String string0 = cafe0.getName();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe((String) null, 0);
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.removeRecipe((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        Cafe cafe0 = new Cafe(")7R[A", 3537, 3537);
        cafe0.printMenu();
        cafe0.printMenu();
        // Undeclared exception!
        cafe0.printMenu();
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        Recipe recipe0 = new Recipe((String) null, 0);
        Cafe cafe0 = new Cafe((String) null);
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.placeOrder((String) null, (String) null, 0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        Recipe recipe0 = new Recipe("s", 2251.505842183417);
        Cafe cafe0 = new Cafe("s");
        cafe0.addRecipe(recipe0);
        cafe0.removeRecipe("s");
        // Undeclared exception!
        try {
            cafe0.getMenu();
            fail("Expecting exception: NegativeArraySizeException");

        } catch (NegativeArraySizeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        Cafe cafe0 = null;
        try {
            cafe0 = new Cafe("uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException", (-36), (-36));
            fail("Expecting exception: NegativeArraySizeException");

        } catch (NegativeArraySizeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        Cafe cafe0 = new Cafe();
        String string0 = cafe0.greeting();
        assertEquals("Welcome to Cafe", string0);
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
        Recipe recipe0 = new Recipe("z", 0.0, recipe_Size0, 0);
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        cafe0.placeOrder("z", "o", 153.5877246578);
        Order order0 = cafe0.serveOrder();
        assertNotNull(order0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        Cafe cafe0 = new Cafe("o", 0, 0);
        Order order0 = cafe0.serveOrder();
        assertNull(order0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Cafe cafe0 = new Cafe();
        Order order0 = cafe0.serveOrder();
        assertNull(order0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe("|A,/86rC!^jKf/r?", (-1980.91554484538));
        cafe0.addRecipe(recipe0);
        try {
            cafe0.placeOrder("", "|A,/86rC!^jKf/r?", 1.0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        Cafe cafe0 = new Cafe("Coffee [unit=");
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("Coffee [unit=", 1.0, recipe_Size0, 0);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        boolean boolean1 = cafe0.placeOrder("Coffee [unit=", "T/!6+0Fh&4)U%pgfIc(", 0.0);
        assertFalse(boolean1 == boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        Cafe cafe0 = new Cafe("o", 0, 0);
        try {
            cafe0.placeOrder("o", "o", 0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        Recipe recipe0 = new Recipe("h", 2276.7365779952997);
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        cafe0.printMenu();
        assertEquals("Cafe", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("z", 0, recipe_Size0, 0);
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        cafe0.placeOrder("z", "Welcome to Cafe", 99.6);
        cafe0.printPendingOrders();
        assertEquals("Cafe", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        Cafe cafe0 = new Cafe("o", 0, 0);
        cafe0.printPendingOrders();
        assertEquals("o", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        Cafe cafe0 = new Cafe("Coffee [unit=");
        Recipe[] recipeArray0 = cafe0.getMenu();
        assertEquals(0, recipeArray0.length);
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        Cafe cafe0 = new Cafe("Coffee [unit=");
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("Coffee [unit=", 1.0, recipe_Size0, 0);
        cafe0.addRecipe(recipe0);
        try {
            cafe0.removeRecipe("^c");
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        Cafe cafe0 = new Cafe("dI4\"PU,");
        Recipe recipe0 = new Recipe("dI4\"PU,", 3249.6);
        cafe0.addRecipe(recipe0);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        Cafe cafe0 = new Cafe("Coffee [unit=");
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("Coffee [unit=", 1.0, recipe_Size0, 11);
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.getMenu();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // 0
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Cafe cafe0 = new Cafe("o", 0, 0);
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("o", 0, recipe_Size0, 0);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        Cafe cafe0 = new Cafe("Coffee [unit=");
        String string0 = cafe0.getName();
        assertEquals("Coffee [unit=", string0);
    }
}
