/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 15:01:33 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.Cafe;
import uk.ac.sheffield.com1003.cafe.Order;
import uk.ac.sheffield.com1003.cafe.Recipe;

public class Cafe_ESTest {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
        Recipe recipe0 = new Recipe("Ww9mu*sc:o;<Ua", 0.0, recipe_Size0, 2753);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        boolean boolean1 = cafe0.placeOrder("Ww9mu*sc:o;<Ua", " - ", 0.0);
        assertTrue(boolean1 == boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test01() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
        Recipe recipe0 = new Recipe("", 1.0, recipe_Size0, 2273);
        Cafe cafe0 = new Cafe("");
        boolean boolean0 = cafe0.addRecipe(recipe0);
        boolean boolean1 = cafe0.placeOrder("", "", 2753);
        assertTrue(boolean1 == boolean0);
        assertTrue(boolean1);
    }

    @Test(timeout = 4000)
    public void test02() throws Throwable {
        Cafe cafe0 = new Cafe((String) null);
        String string0 = cafe0.getName();
        assertNull(string0);
    }

    @Test(timeout = 4000)
    public void test03() throws Throwable {
        Cafe cafe0 = new Cafe("", 2302, 0);
        String string0 = cafe0.getName();
        assertEquals("", string0);
    }

    @Test(timeout = 4000)
    public void test04() throws Throwable {
        Recipe recipe0 = new Recipe((String) null, 2277.0);
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.removeRecipe((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test05() throws Throwable {
        Cafe cafe0 = new Cafe("g~D$sq6ybPA2v", 6188, 6188);
        cafe0.printMenu();
        // Undeclared exception!
        cafe0.printMenu();
    }

    @Test(timeout = 4000)
    public void test06() throws Throwable {
        Recipe recipe0 = new Recipe((String) null, 2277.0);
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.placeOrder((String) null, (String) null, 2277.0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test07() throws Throwable {
        Cafe cafe0 = new Cafe("99X-3u", 5009, 5009);
        cafe0.getMenu();
        // Undeclared exception!
        cafe0.getMenu();
    }

    @Test(timeout = 4000)
    public void test08() throws Throwable {
        Cafe cafe0 = null;
        try {
            cafe0 = new Cafe("line.separator", (-13), (-13));
            fail("Expecting exception: NegativeArraySizeException");

        } catch (NegativeArraySizeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test09() throws Throwable {
        Cafe cafe0 = new Cafe("ekfm{&3#?jeR-1e&Z@", 30, 0);
        String string0 = cafe0.greeting();
        assertEquals("Welcome to ekfm{&3#?jeR-1e&Z@", string0);
    }

    @Test(timeout = 4000)
    public void test10() throws Throwable {
        Cafe cafe0 = new Cafe("ekfm{&3#?jeR-1e&Z@", 30, 0);
        String string0 = cafe0.getName();
        assertEquals("ekfm{&3#?jeR-1e&Z@", string0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe("9([d&36{,h\rU8Yy", (-1116.34983));
        cafe0.addRecipe(recipe0);
        cafe0.placeOrder("9([d&36{,h\rU8Yy", "9([d&36{,h\rU8Yy", (-1116.34983));
        Order order0 = cafe0.serveOrder();
        assertNotNull(order0);
    }

    @Test(timeout = 4000)
    public void test12() throws Throwable {
        Cafe cafe0 = new Cafe("ekfm{&3#?jeR-1e&Z@", 30, 0);
        Order order0 = cafe0.serveOrder();
        assertNull(order0);
    }

    @Test(timeout = 4000)
    public void test13() throws Throwable {
        Cafe cafe0 = new Cafe();
        Order order0 = cafe0.serveOrder();
        assertNull(order0);
    }

    @Test(timeout = 4000)
    public void test14() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
        Recipe recipe0 = new Recipe("Ww9mu*sc:o;<Ua", 0.0, recipe_Size0, 2753);
        cafe0.addRecipe(recipe0);
        try {
            cafe0.placeOrder(" - ", ")t/x o^ .NE'#X-AI6Z", (-3279.4014035));
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test15() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe(")gTVHZH-8D3QC3*r()", 1018.016);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        boolean boolean1 = cafe0.placeOrder(")gTVHZH-8D3QC3*r()", " for ", 0.0);
        assertFalse(boolean1 == boolean0);
        assertFalse(boolean1);
    }

    @Test(timeout = 4000)
    public void test16() throws Throwable {
        Cafe cafe0 = new Cafe("f{z..`D:`[2i[8&T", 0, 0);
        try {
            cafe0.placeOrder((String) null, (String) null, 1.0);
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test17() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
        Recipe recipe0 = new Recipe("", 1.0, recipe_Size0, 2273);
        Cafe cafe0 = new Cafe("");
        cafe0.addRecipe(recipe0);
        cafe0.printMenu();
        assertEquals("", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test18() throws Throwable {
        Recipe recipe0 = new Recipe("9M|Jd$+h Yd_Im]e0", (-2762.81251));
        Cafe cafe0 = new Cafe();
        cafe0.addRecipe(recipe0);
        cafe0.placeOrder("9M|Jd$+h Yd_Im]e0", "9M|Jd$+h Yd_Im]e0", (-2762.81251));
        cafe0.printPendingOrders();
        assertEquals("Cafe", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test19() throws Throwable {
        Cafe cafe0 = new Cafe("ekfm{&3#?jeR-1e&Z@", 30, 0);
        cafe0.printPendingOrders();
        assertEquals("ekfm{&3#?jeR-1e&Z@", cafe0.getName());
    }

    @Test(timeout = 4000)
    public void test20() throws Throwable {
        Cafe cafe0 = new Cafe("ekfm{&3#?jeR-1e&Z@", 30, 0);
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("ekfm{&3#?jeR-1e&Z@", 30, recipe_Size0, 0);
        cafe0.addRecipe(recipe0);
        // Undeclared exception!
        try {
            cafe0.getMenu();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test(timeout = 4000)
    public void test21() throws Throwable {
        Cafe cafe0 = new Cafe("");
        try {
            cafe0.removeRecipe("line.separator");
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        Cafe cafe0 = new Cafe("; For: ");
        Recipe recipe0 = new Recipe("; For: ", 32);
        cafe0.addRecipe(recipe0);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test23() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
        Recipe recipe0 = new Recipe("", 1.0, recipe_Size0, 2273);
        Cafe cafe0 = new Cafe("");
        cafe0.addRecipe(recipe0);
        try {
            cafe0.removeRecipe("line.separator");
            fail("Expecting exception: Exception");

        } catch (Exception e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }

    @Test(timeout = 4000)
    public void test24() throws Throwable {
        Recipe recipe0 = new Recipe("", 0.0);
        Cafe cafe0 = new Cafe("8Eo*!#>YASJ+,4xs", 0, 1422);
        boolean boolean0 = cafe0.addRecipe(recipe0);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test25() throws Throwable {
        Cafe cafe0 = new Cafe();
        Recipe recipe0 = new Recipe("mk$)o2", (-1.0));
        cafe0.addRecipe(recipe0);
        cafe0.removeRecipe("mk$)o2");
        // Undeclared exception!
        try {
            cafe0.getMenu();
            fail("Expecting exception: NegativeArraySizeException");

        } catch (NegativeArraySizeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
        }
    }
}
