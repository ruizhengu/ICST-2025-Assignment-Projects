/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 15:31:34 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.Order;
import uk.ac.sheffield.com1003.cafe.Recipe;

public class Order_ESTest {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("h aOZBva87I;", 1087.42, recipe_Size0, 109);
        Order order0 = new Order(recipe0, "SOY", (-1.0), "bazRJ");
        String string0 = order0.toString();
        assertEquals("Order: h aOZBva87I;; For: SOY; Paid: -1.0", string0);
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        Order order0 = new Order((Recipe) null, "XTDKY", (-1171.709821));
        // Undeclared exception!
        try {
            order0.printReceipt();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Order", e);
        }
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("h aOZBva87I;", 1087.42, recipe_Size0, 109);
        Order order0 = new Order(recipe0, "SOY", (-1.0), "bazRJ");
        order0.printReceipt();
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
        Recipe recipe0 = new Recipe("h aOZBva87I;", 1087.42, recipe_Size0, 109);
        Order order0 = new Order(recipe0, "SOY", (-1.0), "bazRJ");
        order0.serve();
        order0.printReceipt();
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        Order order0 = new Order((Recipe) null, "uk.ac.sheffield.com1003.cafeexceptions.TooManyIngredientsException", 0.0);
        // Undeclared exception!
        try {
            order0.toString();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("uk.ac.sheffield.com1003.cafe.Order", e);
        }
    }
}
