/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 07 11:41:42 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.Cafe;
import uk.ac.sheffield.com1003.cafe.Order;
import uk.ac.sheffield.com1003.cafe.Recipe;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cafe_ESTest extends Cafe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
      Recipe recipe0 = new Recipe("yh", 0.0, recipe_Size0, 4);
      Cafe cafe0 = new Cafe("yh", 4, 2418);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("yh", "8[=Fjm1V", 1.0);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cafe cafe0 = new Cafe((String) null, 8, 8);
      String string0 = cafe0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cafe cafe0 = new Cafe("");
      String string0 = cafe0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe((String) null, 0);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.removeRecipe((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cafe cafe0 = new Cafe("N{E2wAZ-G*", 4766, 4766);
      cafe0.printMenu();
      cafe0.printMenu();
      // Undeclared exception!
      cafe0.printMenu();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Recipe recipe0 = new Recipe((String) null, (-1.0));
      Cafe cafe0 = new Cafe();
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.placeOrder((String) null, (String) null, (-1.0));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("+5G+TO1Ee:mzL", 18.668673169);
      cafe0.addRecipe(recipe0);
      cafe0.removeRecipe("+5G+TO1Ee:mzL");
      // Undeclared exception!
      try { 
        cafe0.getMenu();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cafe cafe0 = null;
      try {
        cafe0 = new Cafe("CtNj", (-1134618355), 0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      String string0 = cafe0.getName();
      assertEquals("Cafe", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("", 2863.934318682701);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("", "", 2863.934318682701);
      Order order0 = cafe0.serveOrder();
      assertNotNull(order0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cafe cafe0 = new Cafe("}e:", 0, 0);
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
      Recipe recipe0 = new Recipe("yh", 0.0, recipe_Size0, 4);
      Cafe cafe0 = new Cafe("yh", 4, 2418);
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.placeOrder("8[=Fjm1V", "none", 0.0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cafe cafe0 = new Cafe("Tae");
      Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
      Recipe recipe0 = new Recipe("UNDEFINED", 2823.029925288244, recipe_Size0, 2419);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("UNDEFINED", (String) null, 2419);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cafe cafe0 = new Cafe("Menu", 0, 0);
      try { 
        cafe0.placeOrder((String) null, "Welcome to Menu", (-1763.4924308992));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cafe cafe0 = new Cafe((String) null, 8, 8);
      Recipe.Size recipe_Size0 = Recipe.Size.SMALL;
      Recipe recipe0 = new Recipe("Enjoy!", 31, recipe_Size0, 8);
      cafe0.addRecipe(recipe0);
      cafe0.printMenu();
      assertNull(cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("", 2863.934318682701);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("", "", 2863.934318682701);
      cafe0.printPendingOrders();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Cafe cafe0 = new Cafe("Menu", 0, 0);
      cafe0.printPendingOrders();
      assertEquals("Menu", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("V", 2863.934318682701);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.getMenu();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cafe cafe0 = new Cafe("Tae");
      Recipe[] recipeArray0 = cafe0.getMenu();
      assertEquals(0, recipeArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      try { 
        cafe0.removeRecipe("Cafe");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Cafe cafe0 = new Cafe("Tae");
      Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
      Recipe recipe0 = new Recipe("UNDEFINED", 2823.029925288244, recipe_Size0, 2419);
      cafe0.addRecipe(recipe0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("", 2863.934318682701);
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.removeRecipe("Cafe");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Cafe cafe0 = new Cafe("Menu", 0, 0);
      Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
      Recipe recipe0 = new Recipe("ML", 0, recipe_Size0, 0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      String string0 = cafe0.greeting();
      assertEquals("Welcome to Cafe", string0);
  }
}
