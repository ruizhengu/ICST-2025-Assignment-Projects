/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 07 15:44:19 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.Cafe;
import uk.ac.sheffield.com1003.cafe.Order;
import uk.ac.sheffield.com1003.cafe.Recipe;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cafe_ESTest {

//  @org.junit.Rule
//  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
//
//  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
//
//  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
//
//
//  @BeforeClass
//  public static void initEvoSuiteFramework() { 
//    org.evosuite.runtime.RuntimeSettings.className = "uk.ac.sheffield.com1003.cafe.Cafe"; 
//    org.evosuite.runtime.GuiSupport.initialize(); 
//    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
//    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
//    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
//    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
//    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
//    org.evosuite.runtime.classhandling.JDKClassResetter.init();
//    setSystemProperties();
//    initializeClasses();
//    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
//  } 
//
//  @AfterClass
//  public static void clearEvoSuiteFramework(){ 
//    Sandbox.resetDefaultSecurityManager(); 
//    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
//  } 
//
//  @Before
//  public void initTestCase(){ 
//    threadStopper.storeCurrentThreads();
//    threadStopper.startRecordingTime();
//    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
//    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
//    setSystemProperties(); 
//    org.evosuite.runtime.GuiSupport.setHeadless(); 
//    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
//    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
//  } 
//
//  @After
//  public void doneWithTestCase(){ 
//    threadStopper.killAndJoinClientThreads();
//    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
//    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
//    resetClasses(); 
//    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
//    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
//    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
//  } 
//
//  public static void setSystemProperties() {
// 
//    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
//    java.lang.System.setProperty("user.dir", "/Users/ruizhengu/Experiments/model_solution_evosuite"); 
//    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/1r/t1t8tcs944979hxkq3w8p1b40000gn/T/"); 
//  }
//
//  private static void initializeClasses() {
//    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Cafe_ESTest.class.getClassLoader() ,
//      "uk.ac.sheffield.com1003.cafe.ingredients.Ingredient",
//      "uk.ac.sheffield.com1003.cafe.exceptions.RecipeNotFoundException",
//      "uk.ac.sheffield.com1003.cafe.exceptions.TooManyIngredientsException",
//      "uk.ac.sheffield.com1003.cafe.Recipe$Size",
//      "uk.ac.sheffield.com1003.cafe.Cafe",
//      "uk.ac.sheffield.com1003.cafe.Recipe",
//      "uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException",
//      "uk.ac.sheffield.com1003.cafe.Order"
//    );
//  } 
//
//  private static void resetClasses() {
//    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Cafe_ESTest.class.getClassLoader()); 
//
//    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
//      "uk.ac.sheffield.com1003.cafe.Cafe",
//      "uk.ac.sheffield.com1003.cafe.exceptions.RecipeNotFoundException",
//      "uk.ac.sheffield.com1003.cafe.Recipe",
//      "uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException",
//      "uk.ac.sheffield.com1003.cafe.Order",
//      "uk.ac.sheffield.com1003.cafe.Recipe$Size"
//    );
//  }

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("B|`7Yps3`", 0.0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("B|`7Yps3`", ", unit=", 543.720665);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cafe cafe0 = new Cafe((String) null, 4, 4);
      String string0 = cafe0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 22, 22);
      String string0 = cafe0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cafe cafe0 = new Cafe((String) null);
      Recipe recipe0 = new Recipe((String) null, 0);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.removeRecipe((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cafe cafe0 = new Cafe("\trYA", 4280, 4280);
      cafe0.printMenu();
      cafe0.printMenu();
      // Undeclared exception!
      cafe0.printMenu();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe((String) null, 0);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.placeOrder((String) null, (String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cafe cafe0 = null;
      try {
        cafe0 = new Cafe("L", (-817), (-817));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cafe cafe0 = new Cafe("yO/XR'`sE");
      String string0 = cafe0.greeting();
      assertEquals("Welcome to yO/XR'`sE", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cafe cafe0 = new Cafe("yO/XR'`sE");
      String string0 = cafe0.getName();
      assertEquals("yO/XR'`sE", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("r=}N=<P*+", "?Qeifr.k", 2430.33762049);
      Order order0 = cafe0.serveOrder();
      assertNotNull(order0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cafe cafe0 = new Cafe("XD<L9^SIG/7GJn", 0, 0);
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.placeOrder("", "?Qeifr.k", 2719.5057866866);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("r=}N=<P*+", "?Qeifr.k", 924.53439314487);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cafe cafe0 = new Cafe("XD<L9^SIG/7GJn", 0, 0);
      try { 
        cafe0.placeOrder("Welcome to ", "", 1932.938895759);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      cafe0.addRecipe(recipe0);
      cafe0.printMenu();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("r=}N=<P*+", "r=}N=<P*+", 2430.33762049);
      cafe0.printPendingOrders();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Cafe cafe0 = new Cafe("D3", 0, 0);
      cafe0.printPendingOrders();
      assertEquals("D3", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe[] recipeArray0 = cafe0.getMenu();
      assertEquals(0, recipeArray0.length);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cafe cafe0 = new Cafe("L", 78, 78);
      Recipe recipe0 = new Recipe("L", 78);
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.removeRecipe("Welcome to u");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Cafe cafe0 = new Cafe("8i");
      Recipe recipe0 = new Recipe("8i", 2430.33762049);
      cafe0.addRecipe(recipe0);
      cafe0.removeRecipe("8i");
      // Undeclared exception!
      try { 
        cafe0.getMenu();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("+*D(]duW70x.", (-1649.9274851514376));
      cafe0.addRecipe(recipe0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("r=}N=<P*+", 2430.33762049);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.getMenu();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Cafe cafe0 = new Cafe("XD<L9^SIG/7GJn", 0, 0);
      Recipe recipe0 = new Recipe("line.separator", 0.0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      assertFalse(boolean0);
  }
}
