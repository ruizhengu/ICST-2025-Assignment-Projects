/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 09 16:06:39 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe.ingredients;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.runner.RunWith;
import uk.ac.sheffield.com1003.cafe.ingredients.Unit;
import uk.ac.sheffield.com1003.cafe.ingredients.Water;

public class Water_ESTest {

    @Test(timeout = 4000)
    public void test0() throws Throwable {
        Water water0 = new Water(0);
        Water water1 = new Water();
        boolean boolean0 = water0.equals(water1);
        assertEquals(30, water1.getAmount());
        assertFalse(boolean0);
        assertEquals("Water", water1.getName());
        assertFalse(water1.equals((Object) water0));
    }

    @Test(timeout = 4000)
    public void test1() throws Throwable {
        Water water0 = new Water();
        water0.name = null;
        // Undeclared exception!
        try {
            water0.equals(water0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test(timeout = 4000)
    public void test2() throws Throwable {
        Water water0 = new Water(837);
        Unit unit0 = Unit.GR;
        water0.unit = unit0;
        Water water1 = new Water();
        assertEquals(30, water1.getAmount());

        water1.amount = 837;
        boolean boolean0 = water0.equals(water1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test3() throws Throwable {
        Water water0 = new Water(2051);
        Water water1 = new Water();
        boolean boolean0 = water0.equals(water1);
        assertFalse(water1.equals((Object) water0));
        assertEquals(30, water1.getAmount());
        assertEquals("Water", water1.getName());
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test4() throws Throwable {
        Water water0 = new Water();
        assertEquals("Water", water0.getName());

        water0.name = "7}y^%\"Ztv4QPv.s_";
        Water water1 = new Water();
        boolean boolean0 = water0.equals(water1);
        assertFalse(boolean0);
    }

    @Test(timeout = 4000)
    public void test5() throws Throwable {
        Water water0 = new Water(0);
        boolean boolean0 = water0.equals("Water [unit=ML, amount=1]");
        assertEquals("Water", water0.getName());
        assertFalse(boolean0);
        assertEquals(0, water0.getAmount());
    }

    @Test(timeout = 4000)
    public void test6() throws Throwable {
        Water water0 = new Water(837);
        boolean boolean0 = water0.equals(water0);
        assertEquals("Water", water0.getName());
        assertEquals(837, water0.getAmount());
        assertTrue(boolean0);
    }

    @Test(timeout = 4000)
    public void test7() throws Throwable {
        Water water0 = new Water();
        boolean boolean0 = water0.equals((Object) null);
        assertFalse(boolean0);
        assertEquals("Water", water0.getName());
        assertEquals(30, water0.getAmount());
    }

    @Test(timeout = 4000)
    public void test8() throws Throwable {
        Water water0 = new Water(837);
        String string0 = water0.toString();
        assertEquals("Water [unit=ML, amount=837]", string0);
        assertEquals("Water", water0.getName());
    }
}
