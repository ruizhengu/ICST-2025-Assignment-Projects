/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 04 16:40:06 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe.ingredients;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Water_ESTest extends Water_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water((-889));
      boolean boolean0 = water1.equalsSolution(water0);
      assertEquals("Water", water1.getName());
      assertFalse(boolean0);
      assertEquals((-889), water1.getAmount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Water water0 = new Water();
      assertEquals(30, water0.getAmount());
      
      water0.amount = (-1604);
      Water water1 = new Water();
      boolean boolean0 = water1.equals(water0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Water water0 = new Water();
      water0.name = null;
      // Undeclared exception!
      try { 
        water0.equalsSolution(water0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Water water0 = new Water();
      water0.name = null;
      // Undeclared exception!
      try { 
        water0.equals(water0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water();
      Unit unit0 = Unit.GR;
      water1.unit = unit0;
      boolean boolean0 = water1.equalsSolution(water0);
      assertEquals("Water", water1.getName());
      assertEquals(30, water1.getAmount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water(1);
      boolean boolean0 = water0.equalsSolution(water1);
      assertEquals("Water", water1.getName());
      assertEquals(1, water1.getAmount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Water water0 = new Water();
      assertEquals("Water", water0.getName());
      
      water0.name = "m1";
      Water water1 = new Water(1);
      boolean boolean0 = water0.equalsSolution(water1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Water water0 = new Water();
      boolean boolean0 = water0.equalsSolution(water0);
      assertTrue(boolean0);
      assertEquals(30, water0.getAmount());
      assertEquals("Water", water0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Water water0 = new Water();
      boolean boolean0 = water0.equalsSolution("Water [unit=ML, amount=-1604]");
      assertEquals(30, water0.getAmount());
      assertFalse(boolean0);
      assertEquals("Water", water0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Water water0 = new Water((-1364));
      boolean boolean0 = water0.equalsSolution((Object) null);
      assertFalse(boolean0);
      assertEquals("Water", water0.getName());
      assertEquals((-1364), water0.getAmount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water();
      assertTrue(water1.equals((Object)water0));
      
      Unit unit0 = Unit.UNDEFINED;
      water1.unit = unit0;
      boolean boolean0 = water1.equals(water0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water(1);
      boolean boolean0 = water1.equals(water0);
      assertEquals(1, water1.getAmount());
      assertFalse(boolean0);
      assertFalse(water0.equals((Object)water1));
      assertEquals("Water", water1.getName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Water water0 = new Water();
      Water water1 = new Water();
      assertEquals("Water", water1.getName());
      
      water1.name = "Ingredient [name=";
      boolean boolean0 = water0.equals(water1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Water water0 = new Water();
      boolean boolean0 = water0.equals(water0);
      assertEquals("Water", water0.getName());
      assertTrue(boolean0);
      assertEquals(30, water0.getAmount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Water water0 = new Water();
      Object object0 = new Object();
      boolean boolean0 = water0.equals(object0);
      assertEquals("Water", water0.getName());
      assertFalse(boolean0);
      assertEquals(30, water0.getAmount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Water water0 = new Water();
      boolean boolean0 = water0.equals((Object) null);
      assertEquals(30, water0.getAmount());
      assertEquals("Water", water0.getName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Water water0 = new Water();
      String string0 = water0.toString();
      assertEquals("Water", water0.getName());
      assertEquals("Water [unit=ML, amount=30]", string0);
  }
}
