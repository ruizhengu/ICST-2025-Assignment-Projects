/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 04 16:45:40 GMT 2024
 */

package uk.ac.sheffield.com1003.cafe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Cafe_ESTest extends Cafe_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Cafe cafe0 = new Cafe("Cae");
      Recipe recipe0 = new Recipe(">X7", 250.0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder(">X7", "oC?4e", 250.0);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Cafe cafe0 = new Cafe("Pending Orders:", 2048, 2048);
      Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
      Recipe recipe0 = new Recipe("Pending Orders:", 2048, recipe_Size0, 250);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("Pending Orders:", "Pending Orders:", 3490.0615);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe.Size recipe_Size0 = Recipe.Size.REGULAR;
      Recipe recipe0 = new Recipe("Welcome to Cafe", 250.82997444, recipe_Size0, 0);
      cafe0.addRecipe(recipe0);
      cafe0.addRecipe(recipe0);
      cafe0.removeRecipe("Welcome to Cafe");
      Recipe[] recipeArray0 = cafe0.getMenu();
      assertEquals(1, recipeArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Cafe cafe0 = new Cafe((String) null);
      String string0 = cafe0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Cafe cafe0 = new Cafe("");
      String string0 = cafe0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe((String) null, 237.37365608679724);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.removeRecipeSolution((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe((String) null, (-410.605609277497));
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.removeRecipe((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Cafe cafe0 = new Cafe("#>E$QdF-sM9^ga: ^V*", 2985, 2985);
      cafe0.printMenuSolution();
      cafe0.printMenuSolution();
      cafe0.printMenuSolution();
      // Undeclared exception!
      cafe0.printMenuSolution();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Cafe cafe0 = new Cafe("kp1G,", 6166, 6166);
      cafe0.printMenu();
      // Undeclared exception!
      cafe0.printMenu();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Recipe recipe0 = new Recipe((String) null, 2343.852467155087);
      Cafe cafe0 = new Cafe((String) null);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.placeOrderSolution((String) null, (String) null, 2343.852467155087);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe((String) null, 1402.0);
      cafe0.addRecipe(recipe0);
      // Undeclared exception!
      try { 
        cafe0.placeOrder((String) null, (String) null, 1402.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Cafe cafe0 = null;
      try {
        cafe0 = new Cafe("", (-28), (-28));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      String string0 = cafe0.greeting();
      assertEquals("Welcome to Cafe", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      String string0 = cafe0.getName();
      assertEquals("Cafe", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Lae", 248.29951706533114);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrderSolution("Lae", "Cae", 1369.84507468);
      Order order0 = cafe0.serveOrderSolution();
      assertNotNull(order0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      Order order0 = cafe0.serveOrderSolution();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Order order0 = cafe0.serveOrderSolution();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("x\"", (-1.0));
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("x\"", "x\"", (-1.0));
      Order order0 = cafe0.serveOrder();
      assertNotNull(order0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Order order0 = cafe0.serveOrder();
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Cafe", (-316.795305174));
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.placeOrderSolution(", dTecaf=", "Welcome to Cafe", 0.0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
      Recipe recipe0 = new Recipe("684jT?U15`*Pix<l", 17.0, recipe_Size0, 2573);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrderSolution("684jT?U15`*Pix<l", "684jT?U15`*Pix<l", 0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      try { 
        cafe0.placeOrderSolution("", "", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Cafe cafe0 = new Cafe("Pending Orders:", 2048, 2048);
      Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
      Recipe recipe0 = new Recipe("Pending Orders:", 2048, recipe_Size0, 250);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      boolean boolean1 = cafe0.placeOrder("Pending Orders:", "qpE&5Q|!TtQ'{j", 250);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Cafe cafe0 = new Cafe("Pending Orders:", 2048, 2048);
      try { 
        cafe0.placeOrder("", "Pending Orders:", 0.0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Cafe cafe0 = new Cafe("uk.ac.sheffield.com1003.cafe.Cafe", 0, 0);
      try { 
        cafe0.placeOrder("uk.ac.sheffield.com1003.cafe.Cafe", "uk.ac.sheffield.com1003.cafe.Cafe", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Cafe", (-316.795305174));
      cafe0.addRecipe(recipe0);
      cafe0.printMenuSolution();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Cafe cafe0 = new Cafe("Pending Orders:", 2048, 2048);
      Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
      Recipe recipe0 = new Recipe("Pending Orders:", 2048, recipe_Size0, 250);
      cafe0.addRecipe(recipe0);
      cafe0.printMenu();
      assertEquals("Pending Orders:", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Cae", 15.760790293518916);
      cafe0.addRecipe(recipe0);
      cafe0.placeOrderSolution("Cae", "Cae", 15.760790293518916);
      cafe0.printPendingOrdersSolution();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      cafe0.printPendingOrdersSolution();
      assertEquals("", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Lae", (-1.0));
      cafe0.addRecipe(recipe0);
      cafe0.placeOrder("Lae", "Lae", (-1.0));
      cafe0.printPendingOrders();
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      cafe0.printPendingOrders();
      assertEquals("", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe[] recipeArray0 = cafe0.getMenu();
      assertEquals(0, recipeArray0.length);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Cafe cafe0 = new Cafe("\"");
      Recipe recipe0 = new Recipe("\"", 2048.0);
      cafe0.addRecipe(recipe0);
      cafe0.removeRecipeSolution("\"");
      assertEquals("\"", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe.Size recipe_Size0 = Recipe.Size.LARGE;
      Recipe recipe0 = new Recipe("684jT?U15`*Pix<l", 17.0, recipe_Size0, 2573);
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.removeRecipeSolution("Welcome to Cafe");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("x\"", (-1.0));
      cafe0.addRecipe(recipe0);
      try { 
        cafe0.removeRecipe("Tt");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("uk.ac.sheffield.com1003.cafe.Cafe", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      Recipe recipe0 = new Recipe("Cafe", (-316.795305174));
      cafe0.addRecipe(recipe0);
      cafe0.addRecipe(recipe0);
      cafe0.removeRecipeSolution("Cafe");
      assertEquals("Cafe", cafe0.getName());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Cafe cafe0 = new Cafe("", 0, 0);
      Recipe recipe0 = new Recipe("", 0);
      boolean boolean0 = cafe0.addRecipe(recipe0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Cafe cafe0 = new Cafe();
      String string0 = cafe0.greetingSolution();
      assertEquals("Welcome to Cafe", string0);
  }
}
